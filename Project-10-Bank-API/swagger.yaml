swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http

paths:
  # ðŸ”¹ Authentification et gestion des utilisateurs
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  # ðŸ”¹ Gestion des transactions
  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get all user transactions
      description: Retrieve all transactions for the authenticated user with optional filters.
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: query
          name: accountId
          description: Filter by account ID
          required: false
          type: string
        - in: query
          name: startDate
          description: Filter transactions from a specific start date (UTC format)
          required: false
          type: string
        - in: query
          name: endDate
          description: Filter transactions until a specific end date (UTC format)
          required: false
          type: string
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        401:
          description: Unauthorized
        500:
          description: Internal Server Error

    post:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Add a new transaction
      description: Add a transaction for the authenticated user.
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - name: transactionId
          in: path
          description: ID of the transaction
          required: true
          type: string
        - in: body
          name: body
          description: Transaction data
          required: true
          schema:
            $ref: '#/definitions/Transaction'
      produces:
        - application/json
      responses:
        200:
          description: Transaction added successfully
        400:
          description: Bad request (Invalid data)
        401:
          description: Unauthorized
        500:
          description: Internal Server Error          

  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get transaction details
      description: Retrieve the details of a specific transaction.
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - name: transactionId
          in: path
          description: ID of the transaction
          required: true
          type: string
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Transaction'
        401:
          description: Unauthorized
        404:
          description: Transaction not found
        500:
          description: Internal Server Error

    post:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Add extra information to a transaction
      description: Attach additional details, notes, or tags to an existing transaction.
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - name: transactionId
          in: path
          description: ID of the transaction to update
          required: true
          type: string
        - in: body
          name: body
          description: Extra information for the transaction
          required: true
          schema:
            $ref: '#/definitions/TransactionExtraInfo'
      produces:
        - application/json
      responses:
        200:
          description: Extra information added successfully
          schema:
            $ref: '#/definitions/Transaction'
        400:
          description: Bad request (Invalid data)
        401:
          description: Unauthorized (Token missing or invalid)
        404:
          description: Transaction not found
        500:
          description: Internal Server Error

    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Update transaction details
      description: Modify specific transaction details or add additional information.
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - name: transactionId
          in: path
          description: ID of the transaction to update
          required: true
          type: string
        - in: body
          name: body
          description: New transaction data (including additional information)
          required: true
          schema:
            $ref: '#/definitions/TransactionUpdate'
      produces:
        - application/json
      responses:
        200:
          description: Transaction updated successfully
          schema:
            $ref: '#/definitions/Transaction'
        400:
          description: Bad request (Invalid data)
        401:
          description: Unauthorized (Token missing or invalid)
        404:
          description: Transaction not found
        500:
          description: Internal Server Error




    delete:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Delete a transaction
      description: Permanently remove a transaction.
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - name: transactionId
          in: path
          description: ID of the transaction
          required: true
          type: string
      produces:
        - application/json
      responses:
        200:
          description: Transaction deleted successfully
        401:
          description: Unauthorized
        404:
          description: Transaction not found
        500:
          description: Internal Server Error

  /transactions/{transactionId}/proof:
    post:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Upload proof for a transaction
      description: Attach a receipt or proof of payment to a transaction.
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - name: transactionId
          in: path
          description: ID of the transaction
          required: true
          type: string
        - in: formData
          name: file
          description: Proof of transaction (receipt, invoice, etc.)
          required: true
          type: file
      consumes:
        - multipart/form-data
      produces:
        - application/json
      responses:
        200:
          description: Proof uploaded successfully
        400:
          description: Bad request
        401:
          description: Unauthorized
        404:
          description: Transaction not found
        500:
          description: Internal Server Error

  /transactions/pdf-statement:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Generate account statement
      description: Generate a PDF account statement for the authenticated user.
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: query
          name: startDate
          description: Filter transactions from a specific start date (UTC format)
          required: false
          type: string
        - in: query
          name: endDate
          description: Filter transactions until a specific end date (UTC format)
          required: false
          type: string
      produces:
        - application/pdf
      responses:
        200:
          description: PDF account statement generated successfully
          schema:
            type: file
        401:
          description: Unauthorized
        500:
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    type: object
    properties:
      email: { type: string, description: User email }
      password: { type: string, description: User password }
      firstName: { type: string, description: User first name }
      lastName: { type: string, description: User last name }

  Transaction:
    type: object
    properties:
      id: { type: string }
      accountId: { type: string }
      accountName: { type: string }
      amount: { type: number }
      balanceLeft: { type: number }
      category: { type: string }
      createdAt: { type: string }
      description: { type: string }

  TransactionExtraInfo:
    type: object
    properties:
      notes: { type: string, description: "Additional notes or comments about the transaction" }
      tags: 
        type: array
        items:
          type: string
        description: "Custom tags for better organization"
      additionalDetails: { type: string, description: "Any other extra information about the transaction" }
    

  Login:
    type: object
    properties:
      email: { type: string, description: User email }
      password: { type: string, description: User password }

  LoginResponse:
    type: object
    properties:
      token: { type: string }

  ApiResponse:
    type: object
    properties:
      status: { type: integer }
      message: { type: string }

  UserProfile:
    type: object
    properties:
      id: { type: string, description: User ID }
      email: { type: string, description: User email }
      firstName: { type: string, description: User first name }
      lastName: { type: string, description: User last name }
